function getOwnProperty() { // объявим функцию через FD, позволяющую получить собственные свойства
    // соответственно, если функция должна выводить только собственные свойства, значит должен быть объект снаружи функции и объект внутри прототипом которого выступит тот что снаружи
    const alleyway = Object.create(adress); // для того чтобы создать собственные свойства объекту нужно сначала создать объект. Создаем объект alleyway, прототипом которого будет adress
    
    alleyway.Sevastopolsky = '4'; // создадим собственное свойство
    for (let key in alleyway) { // переберем все свойства объекта
        if (alleyway.hasOwnProperty(key)) { // т.к. объекты передаются по ссылке мы не можем просто передать в консоль ключ и значение или просто перебрать все свойство циклом - выведутся ключи-значения свойств собственного объекта + прототипа. Чтобы выводились только собственные ключи-значения используем метод hasOwnProperty.

            console.log(`${key}: ${alleyway[key]}`); // воспользуемся шаблонной строкой, выведем собственные для объекта alleyway ключ-значение "Sevastopolsky: 4"
            // Данная функция не должна возвращать значение - в функции не используем return
        }
    }
}

let adress = { 'Severnaya': 21, 'Krasnaya': 42, 'Vokzalnaya': 3 }; //создаем объект - прототип для объекта alleyway, который будет передан в функцию
getOwnProperty(adress); // вызовем функцию, передав в качестве аргумента объект
